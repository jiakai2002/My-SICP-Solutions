(define (list-ref items n)
    (if (= n 0)
        (car items)
        (list-ref (cdr items) (- n 1))))
    
(define (length items)
    (define (length-iter a count)
        (if (null? a)
            count
            (length-iter (cdr a) (+ 1 count))))
    (length-iter items 0))
    
(define (last-pair items)
    (cons (list-ref items (- (length items) 1)) nil)) 
    
display (last-pair (list 1 2 3))
