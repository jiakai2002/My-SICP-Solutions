#((1 2 3) (4 5 6) (7 8 9) (10 11 12))
#cons (accumulate car of each sequence) with (accumulate-n cdr of each sequence)
#car is element, cdr is list of rest of elements

(define (accumulate-n op init seqs)
  (if (null? (car seqs))
    nil
    (cons (accumulate op init (map (lambda x (car x))))
          (accumulate-n op init (map (lambda x (cdr x)))))))
